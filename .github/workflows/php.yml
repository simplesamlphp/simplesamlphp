---

name: CI

on:  # yamllint disable-line rule:truthy
  push:
    branches: ['**']
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [master, simplesamlphp-*]
    paths-ignore:
      - '**.md'

jobs:
  linter:
    name: Linter
    runs-on: ['ubuntu-latest']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: super-linter/super-linter/slim@v6
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LOG_LEVEL: NOTICE
          VALIDATE_ALL_CODEBASE: true
          LINTER_RULES_PATH: 'tools/linters'
          VALIDATE_CSS: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JSON: true
          VALIDATE_PHP_BUILTIN: true
          VALIDATE_YAML: true
          VALIDATE_GITHUB_ACTIONS: true

  quality:
    name: Quality control
    runs-on: [ubuntu-latest]

    steps:
      - name: Setup PHP, with composer and extensions
        id: setup-php
        # https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer, phpcs, psalm
          extensions: mbstring, soap, xml
          coverage: none

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - uses: actions/checkout@v4

      - name: Copy config.php.dist to config.php
        run: cp config/config.php.dist config/config.php

      - name: Create SimpleSAMLphp cache directory
        run: sudo mkdir -p /var/cache/simplesamlphp && sudo chmod 777 /var/cache/simplesamlphp

      - name: Get composer cache directory
        run: echo COMPOSER_CACHE="$(composer config cache-files-dir)" >> "$GITHUB_ENV"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: $COMPOSER_CACHE
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: PHP Code Sniffer
        run: phpcs

      - name: Psalm
        continue-on-error: true
        run: |
          psalm \
          -c psalm.xml \
          --show-info=true \
          --shepherd \
          --php-version=${{ steps.setup-php.outputs.php-version }}

      - name: Psalm (testsuite)
        continue-on-error: true
        run: |
          psalm \
          -c psalm-dev.xml \
          --show-info=true \
          --shepherd \
          --php-version=${{ steps.setup-php.outputs.php-version }}

      - name: Psalter
        run: |
          psalm --alter \
          --issues=UnnecessaryVarAnnotation \
          --dry-run \
          --php-version=${{ steps.setup-php.outputs.php-version }}

      - name: Check for unused translations
        continue-on-error: true
        run: composer translations:unused

  security:
    name: Security checks
    runs-on: [ubuntu-latest]
    steps:
      - name: Setup PHP, with composer and extensions
        # https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, soap, xml
          tools: composer:v2
          coverage: none

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - uses: actions/checkout@v4

      - name: Copy config.php.dist to config.php
        run: cp config/config.php.dist config/config.php

      - name: Create SimpleSAMLphp cache directory
        run: sudo mkdir -p /var/cache/simplesamlphp && sudo chmod 777 /var/cache/simplesamlphp

      - name: Get composer cache directory
        run: echo COMPOSER_CACHE="$(composer config cache-files-dir)" >> "$GITHUB_ENV"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: $COMPOSER_CACHE
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Security check for locked dependencies
        run: composer audit

      - name: Update Composer dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader

      - name: Security check for updated dependencies
        run: composer audit

  unit-tests-linux:
    name: "Syntax and unit tests, PHP ${{ matrix.php-versions }}, ${{ matrix.operating-system }}"
    runs-on: ${{ matrix.operating-system }}
    needs: [linter, quality, security]
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.1', '8.2', '8.3']

    steps:
      - name: Setup PHP, with composer and extensions
        # https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: intl, mbstring, mysql, pdo, pdo_sqlite, soap, xml
          tools: composer:v2
          ini-values: error_reporting=E_ALL
          coverage: xdebug

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v4

      - name: Copy config.php.dist to config.php
        run: cp config/config.php.dist config/config.php

      - name: Create SimpleSAMLphp cache directory
        run: sudo mkdir -p /var/cache/simplesamlphp && sudo chmod 777 /var/cache/simplesamlphp

      - name: Get composer cache directory
        run: echo COMPOSER_CACHE="$(composer config cache-files-dir)" >> "$GITHUB_ENV"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: $COMPOSER_CACHE
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run unit tests with coverage
        if: ${{ matrix.php-versions == '8.1' }}
        run: ./vendor/bin/phpunit

      - name: Run unit tests (no coverage)
        if: ${{ matrix.php-versions != '8.1' }}
        run: ./vendor/bin/phpunit --no-coverage

      - name: Save coverage data
        if: ${{ matrix.php-versions == '8.1' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: ${{ github.workspace }}/build

  unit-tests-windows:
    name: "Syntax and unit tests, PHP ${{ matrix.php-versions }}, ${{ matrix.operating-system }}"
    runs-on: ${{ matrix.operating-system }}
    needs: [linter, quality, security]
    strategy:
      fail-fast: true
      matrix:
        operating-system: [windows-latest]
        php-versions: ['8.1', '8.2', '8.3']

    steps:
      - name: Setup PHP, with composer and extensions
        # https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: intl, mbstring, mysql, pdo, pdo_sqlite, soap, xml
          tools: composer:v2
          ini-values: error_reporting=E_ALL
          coverage: none

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v4

      - name: Get composer cache directory
        run: echo COMPOSER_CACHE="$(composer config cache-files-dir)" >> "$env:GITHUB_ENV"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: $COMPOSER_CACHE
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --no-scripts

      - name: Run unit tests
        run: ./vendor/bin/phpunit --no-coverage

  coverage:
    name: Code coverage
    runs-on: [ubuntu-latest]
    needs: [unit-tests-linux]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-data
          path: ${{ github.workspace }}/build

      - name: Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  cleanup:
    name: Cleanup artifacts
    needs: [unit-tests-linux, coverage]
    runs-on: [ubuntu-latest]
    if: |
      always() &&
      needs.coverage.result == 'success' ||
      (needs.unit-tests-linux.result == 'success' && needs.coverage.result == 'skipped')

    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: coverage-data
